#!bin/bash

function _factorio_headless {

    local cur prev words cword split
    _init_completion -s || return

    local ALL_OPTIONS='
        --help
        --version
        --verbose
        --check-unused-prototype-data
        --no-log-rotation
        --enable-runtime-autoplace-modification
        --start-server-load-latest
        --mod-directory
        --executable-path
        --config
        --map2scenario
        --scenario2map
        --apply-update
        --create
        --map-gen-settings
        --map-gen-seed
        --map-settings
        --preset
        --generate-map-preview
        --generate-tile-properties-csv
        --map-preview-size
        --map-preview-scale
        --map-preview-offset
        --noise-outputs
        --slope-shading
        --report-quantities
        --threads
        --start-server
        --start-server-load-scenario
        --until-tick
        --benchmark
        --benchmark-ticks
        --port
        --bind
        --rcon-port
        --rcon-password
        --server-settings
        --server-whitelist
        --server-banlist
        --console-log
        --server-id
    '

    local PRESET_OPTIONS='
        rich-resources
        marathon
        death-world
        death-world-marathon
        rail-world
    '

    case "$prev" in

        --executable-path|--apply-update|--console-log)
            _filedir
            ;;

        --mod-directory)
            _filedir -d
            ;;

        -s|--map2scenario)
            local IFS=$'\n'
            compopt -o filenames
            COMPREPLY=($( cd /var/snap/factorio-headless/common/saves; compgen -f -- "$cur" ))
            ;;

        -m|--scenario2map|--start-server-load-scenario)
            local IFS=$'\n'
            compopt -o filenames
            COMPREPLY=($( cd /var/snap/factorio-headless/common/scenarios; compgen -d -- "$cur" ))
            ;;

        --preset)
            COMPREPLY=($( compgen -W "$PRESET_OPTIONS" -- "$cur" ))
            ;;

        -c|--config)
            _filedir "ini"
            ;;

        --create|--start-server|--benchmark)
            _filedir "zip"
            ;;

        --map-gen-settings|--map-settings|--server-settings|--server-whitelist|--server-banlist|--server-id)
            _filedir "json"
            ;;

        --generate-tile-properties-csv)
            _filedir "csv"
            ;;

        --generate-map-preview)
            _filedir "png"
            ;;

        --map-preview-size)
            COMPREPLY=($( compgen -W "1024" -- "$cur" ))
            ;;

        --map-preview-scale)
            COMPREPLY=($( compgen -W "1" -- "$cur" ))
            ;;

        --map-preview-offset)
            COMPREPLY=($( compgen -W "0,0" -- "$cur" ))
            ;;

        --port)
            COMPREPLY=($( compgen -W "34197" -- "$cur" ))
            ;;

        --benchmark-ticks)
            COMPREPLY=($( compgen -W "1000" -- "$cur" ))
            ;;

        --map-gen-seed|--noise-outputs|--slope-shading|--report-quantities|--threads|--until-tick|--bind|--rcon-port|--rcon-password)
            ;;

        *)
            COMPREPLY=($( compgen -W "$ALL_OPTIONS" -- "$cur" ))
            ;;
    esac
}

function _factorio_headless_mods {

    local cur prev words cword split
    _init_completion -s || return

    local ALL_OPTIONS='
        list
	    info
	    search
	    install
	    update
	    remove
    '

    case "$prev" in
        info)
            names=$(jq -r '(.results[] | .name)' $SNAP_DATA/cache/mods.json)
            reply=$( compgen -W "${names//\ /\%20}" -- "${cur//\\ /\%20}" )
            COMPREPLY=( "${reply//\%20/\\ }" )
            ;;
        install)
            names=$(jq -r '(.results[] | .name)' $SNAP_DATA/cache/mods.json)
            reply=$( compgen -W "${names//\ /\%20}" -- "${cur//\\ /\%20}" )
            COMPREPLY=( "${reply//\%20/\\ }" )
            ;;
        remove)
            names=$(jq -r '(.mods[] | select(.name != "base") .name)' $SNAP_DATA/data/mods/mod-list.json)
            reply=$( compgen -W "${names//\ /\%20}" -- "${cur//\\ /\%20}" )
            COMPREPLY=( "${reply//\%20/\\ }" )
            ;;
        *)
            COMPREPLY=($( compgen -W "$ALL_OPTIONS" -- "$cur" ))
            ;;
    esac
}

complete -F _factorio_headless factorio-headless
complete -F _factorio_headless_mods factorio-headless.mods